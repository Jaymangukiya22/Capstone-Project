// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  parentId  Int?     @map("parent_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Self-referencing relationship for hierarchy
  parent   Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id], onDelete: Cascade)
  children Category[] @relation("CategoryHierarchy")

  // Quizzes belonging to this category
  quizzes Quiz[]

  @@map("categories")
}

model Quiz {
  id          Int        @id @default(autoincrement())
  title       String     @db.VarChar(200)
  description String?    @db.Text
  categoryId  Int        @map("category_id")
  difficulty  Difficulty @default(MEDIUM)
  timeLimit   Int?       @map("time_limit") // in seconds
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")

  // Relationships
  category  Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  questions Question[]

  @@map("quizzes")
}

model Question {
  id           Int    @id @default(autoincrement())
  quizId       Int    @map("quiz_id")
  questionText String @map("question_text") @db.Text
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relationships
  quiz    Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  options Option[]

  @@map("questions")
}

model Option {
  id         Int     @id @default(autoincrement())
  questionId Int     @map("question_id")
  optionText String  @map("option_text") @db.Text
  isCorrect  Boolean @default(false) @map("is_correct")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  // Relationships
  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@map("options")
}
